<?phpfunction monthList2($start,$end){	if(!is_numeric($start)||!is_numeric($end)||($end<=$start)) return '';	$start=date('Y-m',$start);	$end=date('Y-m',$end);	//转为时间戳	$start=strtotime($start.'-01');	$end=strtotime($end.'-01');	$i=0;//http://www.phpernote.com/php-function/224.html	$d=array();	while($start<=$end){		//这里累加每个月的的总秒数 计算公式：上一月1号的时间戳秒数减去当前月的时间戳秒数		$d[$i]=trim(date('Y-m',$start),' ');		$start+=strtotime('+1 month',$start)-$start;		$i++;	}	return $d;}//商家货款账单 收入function shopincome(){	$token =urlencode($_POST['token']);	if(!isset($_POST['token'])) err('请先登录');	$user = checkToken($token);	$model= new M();		 if($user){        if($user['type'] !=2)err('您不是商户!');		$data=$model->query('select FROM_UNIXTIME(pay_time,"%Y-%m") months, sum(order_amount) as order_amount from ecm_order_offline where seller_id = '.$user['user_id'].' and status=40 and payment_id=3 and is_check=1 group by months order by pay_time desc');		//$list=$model->query('select sum(order_amount) as totalmoney from ecm_order_offline where seller_id = '.$user['user_id'].' and status=40 and payment_id=3');		 $new = array();		 foreach($data as $key=>$val){			 $new[$val['months']] = $val;		 }		 $rs = array();		 $dates = monthList2(strtotime('2016-07-01'),time());		 $dates = array_reverse($dates);		 foreach($dates as $val){			 if(!array_key_exists($val, $new)){				 $new[$val] = array('months'=>$val,'order_amount'=>0);			 }		 }		 krsort($new);		 $total = 0;		 foreach($new as $key=>$val){			 $rs[] = $val;			 $total=$total+$val['order_amount'];		 }		pageJson('ok',"收入账单",$rs,$total);	 }else{        err('身份错误,请重新登录');	 } }//商家账单收入明细（每个月）function shopincomelist(){	$token = rawurlencode($_POST['token']);	if(!isset($_POST["token"]))err("请先登录");	if(!isset($_POST["month"]))err("请选择要看的月份");	$user = checkToken($token);	$model= new M();		if($_POST["page"]=="0"||$_POST["page"]==""){		$page='1';	}else{		$page=$_POST["page"];	}	$pagecount= 10;	$startpage=((int)$page-1)*10;	if($user){		if($user['type'] !=2)err('您不是商户!');		$firstday = date('Y-m-01',strtotime($_POST["month"]));		$lastday = date('Y-m-01',strtotime("$firstday +1 month"));		$where = ' pay_time>= '.strtotime($firstday).' and pay_time <= '.strtotime($lastday).' and';		$count=$model			->query('select count(order_id) as id from ecm_order_offline where '.$where.' seller_id = '.$user['user_id'].' and status=40 and payment_id=3 and is_check=1');		$count=$count[0]['id'];				$totalpage=ceil($count/$pagecount);		$data=$model			->query('select order_id,order_sn,buyer_name,status,pay_time,order_amount,is_check from ecm_order_offline where '.$where.' seller_id = '.$user['user_id'].' and status=40 and payment_id=3 and is_check=1 order by pay_time desc  limit '.$startpage.','.$pagecount.'');			foreach ($data as $k => $v) {            $v['pay_time'] =date('Y-m-d H:i:s',$v['pay_time']);            $v['money'] =$v['order_amount'];            $v['info'] ='货款积分到账';            $data[$k]=$v;        }				 pageJson('ok','收入',$data,$totalpage);	}else{       err('身份错误,请重新登录');	} }//商家账单 支出function shopspending(){	$token =urlencode($_POST['token']);	if(!isset($_POST['token'])) err('请先登录');	$user = checkToken($token);	$model= new M();		 if($user){        if($user['type'] !=2)err('您不是商户!');		$data=$model->query('select FROM_UNIXTIME(pay_createtime,"%Y-%m") months, sum(amount) as order_amount from ecm_sgxt_order where userid = '.$user['user_id'].' and status= 1 and paytype=\'balance\' group by months order by pay_createtime desc');		//$list=$model->query('select sum(amount) as totalmoney from ecm_sgxt_order where userid = '.$user['user_id'].' and status= 1');		 $new = array();		 foreach($data as $key=>$val){			 $new[$val['months']] = $val;		 }		 $rs = array();		 $dates = monthList2(strtotime('2016-07-01'),time());		 $dates = array_reverse($dates);		 foreach($dates as $val){			 if(!array_key_exists($val, $new)){				 $new[$val] = array('months'=>$val,'order_amount'=>0);			 }		 }		 krsort($new);		 $total = 0;		 foreach($new as $key=>$val){			 $rs[] = $val;			 $total=$total+$val['order_amount'];		 }		pageJson('ok',"收入账单",$rs,$total);	 }else{        err('身份错误,请重新登录');	 } }//商家订单  支出 明细function shopspendinglist(){	$token = rawurlencode($_POST['token']);	if(!isset($_POST["token"]))err("请先登录");	if(!isset($_POST["month"]))err("请选择要看的月份");	$user = checkToken($token);	$model= new M();		if($_POST["page"]=="0"||$_POST["page"]==""){		$page='1';	}else{		$page=$_POST["page"];	}	$pagecount= 10;	$startpage=((int)$page-1)*10;	if($user){		if($user['type'] !=2)err('您不是商户!');		$firstday = date('Y-m-01',strtotime($_POST["month"]));		$lastday = date('Y-m-01',strtotime("$firstday +1 month"));		$where = ' pay_createtime>= '.strtotime($firstday).' and pay_createtime <= '.strtotime($lastday).' and';		$count=$model			->query('select count(id) as id from ecm_sgxt_order where '.$where.' userid = '.$user['user_id'].' and status= 1 and paytype=\'balance\'');		$count=$count[0]['id'];				$totalpage=ceil($count/$pagecount);		 $outcome =$model			->query('select amount,orderid,num,price,paytype,pay_createtime from ecm_sgxt_order where '.$where.' userid='.$user['user_id'].' and status=1 and paytype=\'balance\' order by pay_createtime desc limit '.$startpage.','.$pagecount.'');        //$outcome =$outcome ? $outcome : '0';        foreach ($outcome as $key => $value) {            $value['pay_createtime'] =date('Y-m-d H:i:s',$value['pay_createtime']);            $outcome[$key] =$value;        } 		        pageJson('ok','支出',$outcome,$totalpage);	}else{		err('身份错误,请重新登录');	}}//商家账单  提现function shopDepositList(){	$token =urlencode($_POST['token']);	if(!isset($_POST['token'])) err('请先登录');	$user = checkToken($token);	$model= new M();		 if($user){		$data=$model->query('select FROM_UNIXTIME(createtime,"%Y-%m") months, sum(money) as order_amount from ecm_sgxt_deposit where userid = '.$user['user_id'].' and type =1 and ispay in (0,1) group by months order by deid desc');		//$list=$model->query('select sum(money) as totalmoney from ecm_sgxt_deposit where userid = '.$user['user_id'].' and type =1');		 $new = array();		 foreach($data as $key=>$val){			 $new[$val['months']] = $val;		 }		 $rs = array();		 $dates = monthList2(strtotime('2016-07-01'),time());		 $dates = array_reverse($dates);		 foreach($dates as $val){			 if(!array_key_exists($val, $new)){				 $new[$val] = array('months'=>$val,'order_amount'=>0);			 }		 }		 krsort($new);		 $total = 0;		 foreach($new as $key=>$val){			 $rs[] = $val;			 $total=$total+$val['order_amount'];		 }		pageJson('ok',"提现账单",$rs,$total);	 }else{        err('身份错误,请重新登录');	 } }//商家账单 提现明细（每个月）function shopDeposit(){	$token = rawurlencode($_POST['token']);	if(!isset($_POST["token"]))err("请先登录");	if(!isset($_POST["month"]))err("请选择要看的月份");	$user = checkToken($token);	$model= new M();		if($_POST["page"]=="0"||$_POST["page"]==""){		$page='1';	}else{		$page=$_POST["page"];	}	$pagecount= 10;	$startpage=((int)$page-1)*10;	if($user){		$firstday = date('Y-m-01',strtotime($_POST["month"]));		$lastday = date('Y-m-01',strtotime("$firstday +1 month"));		$where = ' createtime>= '.strtotime($firstday).' and createtime <= '.strtotime($lastday).' and';		$count=$model			->query('select count(deid) as id from ecm_sgxt_deposit where '.$where.' userid = '.$user['user_id'].' and type =1');				$count=$count[0]['id'];				$totalpage=ceil($count/$pagecount);		$data=$model			->query('select money,createtime,bank_code,operatortime,ispay from ecm_sgxt_deposit where '.$where.' userid = '.$user['user_id'].' and type=1 order by deid desc  limit '.$startpage.','.$pagecount.'');			foreach ($data as $k => $v) {            $v['createtime'] =date('Y-m-d H:i:s',$v['createtime']);			$v['operatortime'] =date('Y-m-d H:i:s',$v['operatortime']);			$data[$k] =$v;        }				 pageJson('ok','提现',$data,$totalpage);	}else{       err('身份错误,请重新登录');	} }?>