<?php/** * Created by PhpStorm. * User: Administrator * Date: 2016/10/21 * Time: 16:41 *///退款申请页面function apply_page(){    $token = rawurlencode($_POST['token']);    if(!isset($_POST["token"]))err("请先登录");    $user = checkToken($token);    if($user) {        $rec_id=$_POST['rec_id'];        if (!$rec_id) {            err('不允许退款');        }        $model = new M();        $goods=$model->table('order_goods')->where(array('rec_id'=>$rec_id))->find();        if(empty($goods))        {            err('不允许退款');        }        $order_id = $goods['order_id'];        $goods_id = $goods['goods_id'];        $refund=$model->table('refund')->where('order_id='.$order_id.' and goods_id='.$goods_id.' and rec_id='.$rec_id.' and (status=\'SUCCESS\' or status=\'WAIT_SELLER_AGREE\')')->find();        if(!empty($refund))        {            err('您已申请退款！');        }        //查询订单商品信息        $order = $model->table('order')->where(array('order_id' => $order_id))->find();        if($order['auto_finished_time']<time()&&$order['auto_finished_time']>0)        {            err('您的退款时间已过，不能退哟');        }        /*$order_goods = $model->table('order_goods')->where(array('order_id' => $order_id,'goods_id'=>$goods_id))->find();*/        $refund = array();        $refund['goods_fee'] = $refund['refund_fee'] =$goods['price']*$goods['quantity'];        $order_goods_count=$model->query('select count(*) as count from ecm_order_goods where order_id='.$order_id);        $refund_order_goods_count=$model->query('select count(*) as count from ecm_refund where (status=\'SUCCESS\' or status=\'WAIT_SELLER_AGREE\') and order_id='.$order_id);        if($order_goods_count[0]['count']==$refund_order_goods_count[0]['count'])        {            err('不能再申请退款');        }        if($order_goods_count[0]['count']-$refund_order_goods_count[0]['count']>1)        {            $refund['shipping_fee'] =0;        }        else{            $shipping_info = $model->table('order_extm')->where(array('order_id' => $order_id))->find();            $refund['shipping_fee'] = $shipping_info['shipping_fee'];        }        $refund['total_fee'] = $refund['goods_fee'] + $refund['shipping_fee'];        //服务类型        $refund_service=conf('refund_service');        //退货原因        $refund_reason=conf('refund_reason');        $data['refund_service']=$refund_service;        $data['refund_reason']=$refund_reason;        outputJson('ok','msg',$refund,0,$data);    }    else    {        err('身份错误，请重新登录');    }}function get_order_goods_amount($order_id) {    $goods_amount = 0;    if (!$order_id)        return $goods_amount;    $model = new M();    $ordergoods = $model->table('order_goods')->field('price,quantity')->where(array('order_id' => $order_id))->select();    foreach ($ordergoods as $goods) {        $goods_amount += $goods['price'] * $goods['quantity'];    }    return $goods_amount;}//退款申请提交function apply(){    $token = rawurlencode($_POST['token']);    if(!isset($_POST["token"]))err("请先登录");    $user = checkToken($token);    if($user)    {        $rec_id=$_POST['rec_id'];        if (!$rec_id) {            err('不允许退款');        }        $model = new M();        $goods=$model->table('order_goods')->where(array('rec_id'=>$rec_id))->find();        if(empty($goods))        {            err('不允许退款');        }        $order_id = $goods['order_id'];        $goods_id = $goods['goods_id'];        $spec_id = $goods['spec_id'];        //判断该订单是否已申请退款        //$refund=$model->table('refund')->where('order_id='.$order_id.' and goods_id='.$goods_id.' and (status=\'SUCCESS\' or status=\'WAIT_ADMIN_AGREE\')')->find();        $refund=$model->table('refund')->where('order_id='.$order_id.' and goods_id='.$goods_id.' and spec_id='.$spec_id)->find();        if(!empty($refund))        {            err('您已申请过退款！');        }        //查询订单商品信息        $order=$model->table('order')->where(array('order_id'=>$order_id))->find();        if($order['auto_finished_time']<time()&&$order['auto_finished_time']>0)        {            err('您的退款时间已过，不能退哟');        }        if($order['buyer_id']!=$user['user_id'])        {            err('申请用户与购买用户不一致！');        }        /*$order_goods = $model->table('order_goods')->where(array('order_id' => $order_id,'goods_id'=>$goods_id))->find();*/        $goods_fee=$goods['price']*$goods['quantity'];        $order_goods_count=$model->query('select count(*) as count from ecm_order_goods where order_id='.$order_id);        $refund_order_goods_count=$model->query('select count(*) as count from ecm_refund where (status=\'SUCCESS\' or status=\'WAIT_SELLER_AGREE\') and order_id='.$order_id);        if($order_goods_count[0]['count']==$refund_order_goods_count[0]['count'])        {            err('不能再申请退款');        }        if($order_goods_count[0]['count']-$refund_order_goods_count[0]['count']>1)        {            $refund['shipping_fee'] =0;//订单里面还有产品，则不退运费        }        else{            $shipping_info = $model->table('order_extm')->where(array('order_id' => $order_id))->find();            $shipping_fee= $shipping_info['shipping_fee'];        }        $refund_shipping_fee = $_POST['refund_shipping_fee'] ? $_POST['refund_shipping_fee'] : 0;        //服务类型        $refund_service=conf('refund_service');        //退货原因        $refund_reason=conf('refund_reason');        $buyer_img=$_POST['buyer_img'];        $data = array(            'refund_sn' =>gen_refund_sn(),            'order_id' => $order_id,            'goods_id' => $goods_id,            'spec_id' => $spec_id,            'rec_id' => $rec_id,            'refund_reason' => $refund_reason[$_POST['refund_reason']],            'refund_desc' => htmlspecialchars(trim($_POST['refund_desc'])),            'total_fee' => $goods_fee + $shipping_fee,            'goods_fee' => $goods_fee,            'shipping_fee' => $shipping_fee,            'refund_goods_fee' => str_replace(" ","",$_POST['refund_goods_fee']),            'refund_shipping_fee' => str_replace(" ","",$_POST['refund_shipping_fee']),            'shipped' => $_POST['shipped'] ? intval(trim($_POST['shipped'])) : 0,            'buyer_id' => $order['buyer_id'],            'seller_id' => $order['seller_id'],            'status' => 'WAIT_SELLER_AGREE', // 买家已经申请退款，等待卖家同意            'created' => time(),            'buyer_img' => $buyer_img,        );        if ($refund_id =$model->table('refund')->insert($data)) {            $model->table('refund_message')->insert(array(                'owner_id' => $user['user_id'],                'owner_role' => 'buyer',                'refund_id' => $refund_id,                'content' => '买家申请了退款，退款金额为：'.$_POST['refund_goods_fee'].'元，退运费金额：'.$refund_shipping_fee.'元，收货情况为：'.$refund_service[$_POST['shipped']].'，退款原因为：'.$refund_reason[$_POST['refund_reason']].'，退款说明为：'.$_POST['refund_desc'],                'created' => time(),            ));            //买家申请，推送消息给卖家            addMessage('refund' , 'refund_id' ,$refund_id ,$order['buyer_name'].conf('push_message/7') ,$order['seller_id'],$order['seller_name'],'WAIT_SELLER_AGREE');            //发送消息给买家，推送消息给卖家            addMessage('refund' , 'refund_id' ,$refund_id ,'您的退款申请已提交！',$order['buyer_id'],$order['buyer_name'],'WAIT_SELLER_AGREE');            fk('退款申请提交',$refund_id);        }        else        {            err('fail');        }    }    else    {        err('身份错误，请重新登录');    }}//编辑退款信息function edit_apply(){     $token = rawurlencode($_POST['token']);    if(!isset($_POST["token"]))err("请先登录");    $user = checkToken($token);    if(!$user)    {        err('身份错误，请重新登录');    }    $refund_id =intval($_POST['refund_id']);    if (!$refund_id) {        err('error');    }    $model=new M();    $refund=$model->table('refund')->where('refund_id='.$refund_id.' and buyer_id='.$user['user_id'])->find();    if (!$refund) {        err('不存在退款记录');    }    $buyer_img=$_POST['buyer_img'];    //$buyer_img=uploadimglist('buyer_img','data/files/refund_cert/member_'.$user['buyer_id'].'/');    if(!empty($buyer_img))    {        $data['buyer_img']=$buyer_img;    }    $refund_reason=conf('refund_reason');    $data['refund_reason']=$refund_reason[$_POST['refund_reason']];    $data['refund_desc']=htmlspecialchars(trim($_POST['refund_desc']));    $data['refund_goods_fee']=trim($_POST['refund_goods_fee']);    $data['refund_shipping_fee']=trim($_POST['refund_shipping_fee']);    $data['shipped']=$_POST['shipped'] ? intval(trim($_POST['shipped'])) : 0;    $result=$model->table('refund')->where(array('refund_id'=>$refund_id))->update($data);    if($result<=0)    {        err('编辑失败');    }    $data['refund_reason']=$_POST['refund_reason'];    fk('编辑信息成功',$data);}function gen_refund_sn(){    mt_srand((double) microtime() * 1000000);    $timestamp = time();    $y = date('Y', $timestamp);    $z = date('z', $timestamp);    $refund_sn = $y . str_pad($z, 3, '0', STR_PAD_LEFT) . str_pad(mt_rand(1, 99999), 5, '0', STR_PAD_LEFT);    //查询    $model=new M();    $refund=$model->table('refund')->field('refund_id')->where(array('refund_sn'=>$refund_sn))->find();    if (!$refund)    {        return $refund_sn;    }    return gen_refund_sn();}//退款上传图片function img(){    $token = rawurlencode($_POST['token']);    if(!isset($_POST["token"]))err("请先登录");    $user = checkToken($token);    if(!$user) {        err('身份错误，请重新登录');    }    $dir='data/files/refund_cert/member_'.$user['user_id'].'/';    $name=date('YmdHis').rand(5,9999);    $result=uploadimg('file',$dir,$name);    if(!empty($result))    {        $data['file']=$result;        fk('success',$result);    }    err('上传失败');}//退款详情function info(){    $token = rawurlencode($_POST['token']);    if(!isset($_POST["token"]))err("请先登录");    $user = checkToken($token);    if($user) {        $refund_id = empty($_POST['refund_id']) ? 0 : intval($_POST['refund_id']);        if (!$refund_id) {            err('error');        }        $model=new M();        $refund=$model->table('refund')->where('refund_id='.$refund_id.' and (buyer_id='.$user['user_id'].' or seller_id='.$user['user_id'].')')->find();        if (!$refund) {            err('不存在退款记录');        }        //查询商品名称        $goods=$model->table('goods')->field('store_id,goods_name')->where(array('goods_id'=>$refund['goods_id']))->find();        $data['goods_name']=$goods['goods_name'];        //查询店铺名称        $stores=$model->table('store')->field('store_name')->where(array('store_id'=>$goods['store_id']))->find();        $data['store_name']=$stores['store_name'];        $data['refund_id']=$refund['refund_id'];        $data['refund_sn']=$refund['refund_sn'];        $data['total_fee']=$refund['total_fee'];        $data['refund_fee']=$refund['refund_goods_fee']+$refund['refund_shipping_fee'];        $data['refund_goods_fee']=$refund['refund_goods_fee'];        $data['refund_shipping_fee']=$refund['refund_shipping_fee'];        //服务类型        $refund_service=conf('refund_service');        $refund_reason=conf('refund_reason');        $refund_reason_test=array_flip($refund_reason);        $data['shipped_name']=$refund_service[$refund['shipped']];        $data['shipped']=$refund['shipped'];        $data['refund_reason_id']=$refund_reason_test[$refund['refund_reason']];        $data['refund_reason']=$refund['refund_reason'];        $data['refund_desc']=$refund['refund_desc'];        $data['goods_fee']=$refund['goods_fee'];        $data['shipping_fee']=$refund['shipping_fee'];        $data['refund_status']=$refund['status'];        $data['created']=date('Y-m-d H:i:s',$refund['created']);        $data['buyer_img']=$refund['buyer_img'];        //凭证        /*$refund_message=$model->table('refund_message')->field('pic_url')->where(array('refund_id'=>$refund_id))->find();        $data['pic_url']=$refund_message['pic_url'];*/        fk('ok',$data);    }    else    {        err('身份错误，请重新登录');    }}//卖家同意退款function agree(){    $token = rawurlencode($_POST['token']);    if(!isset($_POST["token"]))err("请先登录");    $user = checkToken($token);    if(empty($user)) {        err('身份错误，请重新登录');    }    $refund_id = empty($_POST['refund_id']) ? 0 : intval($_POST['refund_id']);    if (!$refund_id) {        err('参数错误');    }    $model=new M();    $refund=$model->table('refund')->where( '(status!="SUCCESS" AND status!="CLOSED" AND status!="WAIT_ADMIN_AGREE") and refund_id=' . $refund_id . ' and seller_id=' . $user['user_id'])->find();    if (!$refund) {        err('记录不存在');    }    $order_id = $refund['order_id'];    //查询订单    $order_info=$model->table('order')->where(array('order_id'=>$order_id))->find();    //查询买卖双方信息    $seller_info=$model->table('member')->where(array('user_id'=>$order_info['seller_id']))->find();    $buyer_info=$model->table('member')->where(array('user_id'=>$order_info['buyer_id']))->find();    //如果为 epay 支付交易(积分支付购物)    if ($order_info['payment_code'] == 'zjgl'||$order_info['payment_id'] == 3) {        //退款金额        $money = $refund['refund_goods_fee'] + $refund['refund_shipping_fee'];        $seller_user_id = $order_info['seller_id'];        $buyer_user_id = $order_info['buyer_id'];        $seller_epay=$model->table('epay')->where(array('user_id'=>$seller_user_id))->find();        $buyer_epay=$model->table('epay')->where(array('user_id'=>$buyer_user_id))->find();        if (empty($seller_info) || empty($buyer_info)) {            err('seller_agree_refund_error');        } //判断是否已完成,如果未完成先结束订单        auto_refund_confirm_order($order_info);        //首先对退货进行处理 BEGIN        $model->table('refund')->where(array('refund_id'=>$refund_id))->update(array('status' => 'SUCCESS', 'end_time' => time(),'seller_desc'=>$_POST['seller_desc']));        $content = '卖家（'.$order_info['seller_name'].'）已经同意了退款申请，退款成功！';        $data = array(            'owner_id' => $order_info['seller_id'],            'owner_role' => 'seller',            'refund_id' => $refund_id,            'content' => $content,            'created' => time()        );        $model->table('refund_message')->insert($data);        $buyer_log_text = $seller_info['user_name'] . '同意给你购买的产品退款' . $money . '元，订单号为:' . $order_info['order_sn'] . ',退款编号为:' . $refund_id;        $buyer_epay_log = array(            'user_id' => $buyer_user_id,            'user_name' => $buyer_info['user_name'],            'order_id' => $order_info['order_id'],            'order_sn' => $order_info['order_sn'],            'to_id' => $seller_info['user_id'],            'to_name' => $seller_info['user_name'],            'type' => EPAY_REFUND_IN,            'money_flow' => 'income',            'states' => $order_info['status'],            'money' => $money,            'complete' => 1,            'log_text' => $buyer_log_text,            'add_time' => time(),        );        $model->table('epaylog')->insert($buyer_epay_log);        $buyer_new_money = array(            'money' => $buyer_epay['money'] + $money,        );        $model->table('epay')->where(array('user_id'=>$buyer_user_id))->update($buyer_new_money);        //卖家同意退款（退款完成）推送消息给买家        addMessage('refund' , 'refund_id' ,$refund_id ,$seller_info['user_name'].conf('push_message/5') ,$buyer_user_id,$buyer_info['user_name'],'SUCCESS');    }	else	{        //现金支付，人工退现金		 //判断是否已完成,如果未完成先结束订单        auto_refund_confirm_order($order_info);        //首先对退货进行处理 BEGIN        $model->table('refund')->where(array('refund_id'=>$refund_id))->update(array('status' => 'SUCCESS', 'end_time' => time(),'seller_desc'=>$_POST['seller_desc']));        $content = '卖家（'.$order_info['seller_name'].'）已经同意了退款申请，退款成功！';        $data = array(            'owner_id' => $order_info['seller_id'],            'owner_role' => 'seller',            'refund_id' => $refund_id,            'content' => $content,            'created' => time()        );        $model->table('refund_message')->insert($data);        // EBD        //退商家赠送给用户的积分        if($order_info['point']>0)        {            //减去用户得到的            $model -> table('member') ->where(array('user_id' => $order_info['buyer_id'])) ->setDec('point' ,$order_info['point']);            //增加商家发送的            $model->table('member')->where('user_id='.$order_info['seller_id'])->setInc('pay_point',$order_info['point']*conf('PAY_INFO/shops_point'));        }	}        fk('卖家同意退款');}//当卖家同意退款 订单自动确认收货function auto_refund_confirm_order($order_info){    $model=new M();    $order_id = $order_info['order_id'];    //更改订单的状态为已退款    $model->table('order')->where(array('order_id'=>$order_info['order_id']))->update(array('status' => ORDER_FINISHED, 'finished_time' => time()));    $order_status=conf('order_status');    /* 记录订单操作日志 */    $model->table('order_log')->insert(array(        'order_id' => $order_id,        'operator' => 0,        'order_status' => $order_status[$order_info['status']],        'changed_status' => $order_status[ORDER_FINISHED],        'remark' => '卖家同意退款，该订单中的所有商品都处于处理完毕状态，故订单状态自动转为已完成',        'log_time' => time(),        'operator_type'=>'seller',    ));}//卖家拒绝退款function refuse(){    $token = rawurlencode($_POST['token']);    if(!isset($_POST["token"]))err("请先登录");    $user = checkToken($token);    if(empty($user)) {        err('身份错误，请重新登录');    }    $refund_id = empty($_POST['refund_id']) ? 0 : intval($_POST['refund_id']);    if (!$refund_id) {        err('参数错误');    }    $model=new M();    $refund=$model->table('refund')->where( '(status!="SUCCESS" AND status!="CLOSED" AND status!="WAIT_ADMIN_AGREE") and refund_id=' . $refund_id . ' and seller_id=' . $user['user_id'])->find();    if (!$refund) {        err('记录不存在');    }    //上传凭证    $seller_img=uploadimglist('seller_img','data/files/refund_cert/member_'.$user['user_id'].'/');    //$pic_url=uploadimg('pic_url','data/files/refund_cert/member_'.$user['user_id'].'/',date('YmdHis').rand(5,9999));    //添加卖家拒绝记录    $data = array(        'owner_id' => $user['user_id'],        'owner_role' => 'seller',        'refund_id' => $refund_id,        'content' => '卖家拒绝了退款申请，拒绝理由为：'.trim($_POST['refuse_reason']),        //'pic_url' => $pic_url,        'created' => time()    );    $model->table('refund_message')->insert($data);    //修改退款申请状态    $model->table('refund')->where(array('refund_id'=>$refund_id))->update(array('status' => 'SELLER_REFUSE_BUYER', 'end_time' => time(),'refuse_reason'=>trim($_POST['refuse_reason']),'seller_desc'=>trim($_POST['seller_desc']),'seller_img'=>$seller_img));    //买家拒绝退款，推送消息给买家    $buyer=$model->table('member')->where(array('user_id'=>$refund['buyer_id']))->find();    addMessage('refund' , 'refund_id' ,$refund_id ,$user['user_name'].conf('push_message/6') ,$refund['buyer_id'],$buyer['user_name'],'SELLER_REFUSE_BUYER');    fk('卖家拒绝退款成功');}//撤销申请function cancle_apply(){    $token = rawurlencode($_POST['token']);    if(!isset($_POST["token"]))err("请先登录");    $user = checkToken($token);    if(empty($user)) {        err('身份错误，请重新登录');    }    $refund_id = empty($_POST['refund_id']) ? 0 : intval($_POST['refund_id']);    if (!$refund_id) {        err('参数错误');    }    $model=new M();    $refund=$model->table('refund')->field('refund_id,refund_sn')->where( '(status!="SUCCESS" AND status!="CLOSED" AND status!="WAIT_ADMIN_AGREE") and refund_id=' . $refund_id . ' and buyer_id=' . $user['user_id'])->find();    if (!$refund) {        err('申请记录不存在');    }    //更改申请的状态、结束时间    $model->table('refund')->where(array('refund_id'=>$refund_id))->update(array('status' => 'CLOSED', 'end_time' => time()));    //插入退款信息    $model->table('refund_message')->insert(array('owner_id'=>$user['user_id'],'owner_role' => 'buyer','refund_id' => $refund_id,'content' =>'取消退款，退款编号为：'.$refund['refund_sn'],'created' => time(),));    //买家撤销申请，推送消息给卖家    //$seller=$model->table('member')->where(array('user_id'=>$refund['seller_id']))->find();    //addMessage('refund' , 'refund_id' ,$refund_id ,$user['user_name'].conf('push_message/8') ,$refund['seller_id'],$seller['user_name']);    fk('撤销申请成功');}